<?xml version="1.0"?>

<window id="uiEditorWindow"
        orient="horizontal"
        align="stretch"
        onload="initEditor()"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <script type="application/x-javascript">
    var gEditorElem = null;
    var gEditor     = null;

    function initEditor() {
        dump("initEditor() invoked\n");
        // test dynamic tab insertion
        var editorWindow             = null;
        var editorElem               = null;

        editorElem = document.createElementNS("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul", "editor");
        editorElem.setAttribute("type", "content");
        editorElem.setAttribute("flex", "1");
        editorElem.setAttribute("style", "border: 2px solid black; margin: 2px 2px 2px 2px;");
        editorElem.setAttribute("onload", "event.stopPropagation()");
        editorElem.setAttribute("context", "uiYulupEditorEditorContextMenu");

        editorWindow = document.getElementById("uiEditorWindow");
        editorWindow.appendChild(editorElem);

        gEditorElem = editorElem;

        window.setTimeout(continueInit, 100);
    }

    function continueInit() {
        dump("continueInit() invoked (chocked initialisation)\n");

        var editorElem = gEditorElem;

        // set up
        //var editorElem = document.getElementById("uiEditor");
        //gEditorElem = editorElem;
        editorElem.makeEditable("text", false);

        gEditor = editorElem.getEditor(editorElem.contentWindow);
        gEditor.QueryInterface(Components.interfaces.nsIPlaintextEditor);

        editorElem.contentWindow.addEventListener("keypress", function (event) { event.preventBubble(); }, true);

        dump("editorElem status = \"" + editorElem.editingSession.editorStatus  + "\"\n");
        dump("is editable = \"" + gEditor.isDocumentEditable  + "\"\n");
    }

    function addText() {
        gEditor.insertText("Hello?");
    }

    function openEditorInNewWindow() {
        window.open("chrome://test/content/contextmenu-test.xul", "contextMenutest", "chrome,resizable=yes");
    }
  </script>

  <popupset id="uiYulupEditorPopupSet">
    <popup id="uiYulupEditorEditorContextMenu"
           onpopupshowing="dump('SHOW CONTEXT\n');">
      <menuitem id="uiYulupEditorEditorContextCut"
                label="Cut"/>
      <menuitem id="uiYulupEditorEditorContextCopy"
                label="Copy"/>
      <menuitem id="uiYulupEditorEditorContextPaste"
                label="Paste"/>
    </popup>
  </popupset>

  <button label="Add Text" oncommand="addText()"/>
  <!--<editor id="uiEditor" context="uiYulupEditorEditorContextMenu" type="content-primary" flex="1" style="border: 2px solid black; margin: 2px 2px 2px 2px;" onload="continueInit();"/>-->

  <button label="Open in new window" oncommand="openEditorInNewWindow()"/>

</window>
