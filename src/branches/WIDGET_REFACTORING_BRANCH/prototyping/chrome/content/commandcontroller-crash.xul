<?xml version="1.0"?>

<window id="commandControllerCrashWindow"
        onload="Container.onLoadListener()"
        title="This should crash after clicking the button"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <script type="application/x-javascript">
    var Container = {
        onLoadListener: function () {
            var commandController = null;

            dump("Container.onLoadListener() invoked\n");

            commandController = Components.classes["@mozilla.org/embedcomp/base-command-controller;1"].createInstance(Components.interfaces.nsIControllerContext);
            commandController.init(null);

            // if we instead do setCommandContext(null) then we won't crash
            commandController.setCommandContext(Container);

            window.controllers.insertControllerAt(0, commandController);

            commandTable = commandController.QueryInterface(Components.interfaces.nsIInterfaceRequestor).getInterface(Components.interfaces.nsIControllerCommandTable);

            commandTable.registerCommand("cmd_crash", new CrashCommand("cmd_crash"));
        },

        crashMe: function () {
            var controller = null;

            dump("Container.crashMe() invoked\n");

            controller = window.controllers.getControllerForCommand("cmd_crash");

            dump("Container.crashMe: controller = \"" + controller + "\"\n");

            if (controller)
                controller.isCommandEnabled("cmd_crash");
        }
    };

    function CrashCommand(aCommandName) {
        this.__commandName = aCommandName;
    }

    CrashCommand.prototype = {
        __commandName: null,

        QueryInterface: function (aUUID) {
            dump("CrashCommand.QueryInterface() invoked\n");

            if (aUUID.equals(Components.interfaces.nsISupports) ||
                aUUID.equals(Components.interfaces.nsIControllerCommand)) {
                return this;
            } else {
                throw Components.results.NS_NOINTERFACE;
            }
        },

        doCommand: function (aCommandName, aCommandContext) {
            dump("CrashCommand.doCommand() invoked\n");

            if (this.__commandName == aCommandName) {
                return true;
            } else {
                return false;
            }
        },

        doCommandParams: function (aCommandName, aParams, aCommandContext) {
            dump("CrashCommand.doCommandParams() invoked\n");

            return this.doCommand(aCommandName, aCommandContext);
        },

        getCommandStateParams: function (aCommandName, aParams, aCommandContext) {
            dump("CrashCommand.getCommandStateParams() invoked\n");

        },

        isCommandEnabled: function (aCommandName, aCommandContext) {
            dump("CrashCommand.isCommandEnabled() invoked\n");

            return false;
        }
    };
  </script>

  <button label="Crash me!" oncommand="Container.crashMe()"/>
</window>
